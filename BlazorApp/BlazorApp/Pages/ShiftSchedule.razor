@page "/shiftschedule"
@using BlazorApp.Data
@using System.Drawing
@using BlazorApp.Models
@using BlazorApp.Services
@inject EmployeeApiConsumer EmployeeApiConsumer

<PageTitle>Shift Scheduler</PageTitle>

<h1>Shift Scheduler</h1>

<SfSchedule  @ref="Scheduler"  TValue=AppointmentDto> 
    <ScheduleEventSettings DataSource="@DataSource" ></ScheduleEventSettings>
    <ScheduleEvents TValue="AppointmentDto" EventRendered="OnEventRendered"></ScheduleEvents> 
    <ScheduleViews>
        <ScheduleView Option="View.Day"></ScheduleView>
        <ScheduleView Option="View.Week"></ScheduleView>
        <ScheduleView Option="View.WorkWeek"></ScheduleView>
        <ScheduleView Option="View.Month"></ScheduleView>
        <ScheduleView Option="View.Agenda"></ScheduleView>
    </ScheduleViews>
</SfSchedule>


@code {
    List<AppointmentDto> DataSource = new();
    public SfSchedule<AppointmentDto> Scheduler;
    protected override async Task OnInitializedAsync()
    {
        var employees = (await EmployeeApiConsumer.GetAll()).Data;

        foreach (var employee in employees)
        {
            var color = RandomColor();
            foreach (var shift in employee.Shifts)
            {
                DataSource.Add(new AppointmentDto
                {
                    Id = shift.Id,
                    Subject = shift.Title,
                    Location = shift.Client.Name,
                    StartTime = shift.Date.ToDateTime(shift.StartTime),
                    EndTime = shift.Date.ToDateTime(shift.EndTime),
                    Description = shift.Title,
                    CategoryColor = color
                });
            }
        }

        await Scheduler.RefreshAsync();
    }
    
    public void OnEventRendered(EventRenderedArgs<AppointmentDto> args) 
    { 
        Dictionary<string, object> attributes = new Dictionary<string, object> {{"style", "background:" + args.Data.CategoryColor}};
        args.Attributes = attributes; 
    }

    private string RandomColor()
    {
        Random randomGen = new Random();
        KnownColor[] names = (KnownColor[]) Enum.GetValues(typeof(KnownColor));
        KnownColor randomColorName = names[randomGen.Next(names.Length)];
        Color randomColor = Color.FromKnownColor(randomColorName);
        return  $"#{randomColor.R:X2}{randomColor.G:X2}{randomColor.B:X2}";
    }
}