@using BlazorApp.Share.Entities
@using BlazorApp.Services
@inject ShiftApiService     ShiftApiService
@inject DeviationApiService DeviationApiService

<SfDialog Width="450px" IsModal="true" Visible="false" @ref="DialogObj">
    <DialogTemplates>
        <Header>@Title</Header>
        <Content>
            <EditForm id="deviationForm" Model="@_deviationDto" OnValidSubmit="HandleValidSubmit">
                <ContentTemplate>
                    <DataAnnotationsValidator/>
                    <CustomFormValidator @ref="customFormValidator"></CustomFormValidator>

                    <div class="form-group">
                        <label for="shift">Shift:</label>
                        <SfDropDownList ID="shift" TValue="string" AllowFiltering="true" TItem="Shift" PopupHeight="200px" PopupWidth="425px" Placeholder="Select a shift" @bind-Value="@_deviationDto.ShiftId" DataSource="@_shifts">
                            <DropDownListFieldSettings Value="Id" Text="Title"></DropDownListFieldSettings>
                            <DropDownListEvents TValue="string" TItem="Shift" ValueChange="OnValueChange"></DropDownListEvents>
                        </SfDropDownList>
                        <ValidationMessage For="@(() => _deviationDto.ShiftId)"></ValidationMessage>
                    </div>

                    <DeviationDetailFormComponent DeviationDto="@_deviationDto"></DeviationDetailFormComponent>

                </ContentTemplate>
            </EditForm>
        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton Content="Submit" IsPrimary="true" Type="ButtonType.Submit" form="deviationForm"/>
        @if (IsDisplayedDeleteButton)
        {
            <DialogButton Content="Delete" IsPrimary="false" OnClick="@OnDelete"/>
        }
        <DialogButton Content="Cancel" IsPrimary="false" OnClick="@OnCancel"/>
    </DialogButtons>
</SfDialog>